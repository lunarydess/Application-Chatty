[plugins]
shadow = { id= "com.gradleup.shadow", version.ref = "shadow" }

[versions]
# plugins
shadow = "8.3.0"

# annotations
jetbrains-annotations = "24.1.0"

# logging
slf4j = "2.0.16"
tinylog = "2.8.0-M1"

# networking
netty = "4.2.0.Alpha3"

# cryptography
jzlib  = "1.1.3"
bcprov = "1.78.1"

# swing
miglayout = "11.4"
flatlaf = "3.5.1"
jackson = "2.17.2"

# console
jline = "3.26.3"

[libraries]
# annotations
annotations = { group = "org.jetbrains", name = "annotations", version.ref = "jetbrains-annotations" }

# logging
slf4j-api     = { group = "org.slf4j"  , name = "slf4j-api"    , version.ref = "slf4j" }
tinylog-api   = { group = "org.tinylog", name = "tinylog-api"  , version.ref = "tinylog" }
tinylog-impl  = { group = "org.tinylog", name = "tinylog-impl" , version.ref = "tinylog" }
slf4j-tinylog = { group = "org.tinylog", name = "slf4j-tinylog", version.ref = "tinylog" }

# networking
netty-common                                = { group = "io.netty", name = "netty-common"                  , version.ref = "netty" }
netty-buffer                                = { group = "io.netty", name = "netty-buffer"                  , version.ref = "netty" }
netty-codec                                 = { group = "io.netty", name = "netty-codec"                   , version.ref = "netty" }
netty-codec-compression                     = { group = "io.netty", name = "netty-codec-compression"       , version.ref = "netty" }
netty-resolver                              = { group = "io.netty", name = "netty-resolver"                , version.ref = "netty" }
netty-transport                             = { group = "io.netty", name = "netty-transport"               , version.ref = "netty" }
netty-transport-classes-epoll               = { group = "io.netty", name = "netty-transport-classes-epoll" , version.ref = "netty" }
netty-transport-classes-kqueue              = { group = "io.netty", name = "netty-transport-classes-kqueue", version.ref = "netty" }
netty-transport-native-epoll-linux-aarch_64 = { group = "io.netty", name = "netty-transport-native-epoll"  , version.ref = "netty" }
netty-transport-native-epoll-linux-x86_64   = { group = "io.netty", name = "netty-transport-native-epoll"  , version.ref = "netty" }
netty-transport-native-kqueue-osx-aarch_64  = { group = "io.netty", name = "netty-transport-native-kqueue" , version.ref = "netty" }
netty-transport-native-kqueue-osx-x86_64    = { group = "io.netty", name = "netty-transport-native-kqueue" , version.ref = "netty" }
netty-handler                               = { group = "io.netty", name = "netty-handler"                 , version.ref = "netty" }

# cryptography
jzlib           = { group = "com.jcraft"      , name = "jzlib"         , version.ref = "jzlib" }
bcprov-jdk18on  = { group = "org.bouncycastle", name = "bcprov-jdk18on", version.ref = "bcprov" }

# swing
miglayout-swing         = { group = "com.miglayout", name = "miglayout-swing"        , version.ref = "miglayout" }
flatlaf                 = { group = "com.formdev"  , name = "flatlaf"                , version.ref = "flatlaf" }
flatlaf-intellij-themes = { group = "com.formdev"  , name = "flatlaf-intellij-themes", version.ref = "flatlaf" }

# serialization
jackson-annotations     = { group = "com.fasterxml.jackson.core"      , name = "jackson-annotations"    , version.ref = "jackson" }
jackson-core            = { group = "com.fasterxml.jackson.core"      , name = "jackson-core"           , version.ref = "jackson" }
jackson-databind        = { group = "com.fasterxml.jackson.core"      , name = "jackson-databind"       , version.ref = "jackson" }
jackson-dataformat-toml = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-toml", version.ref = "jackson" }

# terminal
jline-native =       { group = "org.jline", name = "jline-native"      , version.ref = "jline" }
jline-terminal =     { group = "org.jline", name = "jline-terminal"    , version.ref = "jline" }
jline-reader =       { group = "org.jline", name = "jline-reader"      , version.ref = "jline" }
jline-terminal-jni = { group = "org.jline", name = "jline-terminal-jni", version.ref = "jline" }

[bundles]
network-all = [
    "netty-common",
    "netty-buffer",
    "netty-codec",
    "netty-codec-compression",
    "netty-resolver",
    "netty-transport",
    "netty-transport-classes-epoll",
    "netty-transport-classes-kqueue",
    "netty-handler",
    "netty-transport-native-epoll-linux-aarch_64",
    "netty-transport-native-epoll-linux-x86_64",
    "netty-transport-native-kqueue-osx-aarch_64",
    "netty-transport-native-kqueue-osx-x86_64"
]

crypto-all = [
    "jzlib",
    "bcprov-jdk18on"
]

swing-all = [
    "miglayout-swing",
    "flatlaf",
    "flatlaf-intellij-themes"
]

log-all = [
    "tinylog-api",
    "tinylog-impl",
    "slf4j-tinylog"
]

data-all = [
    "jackson-annotations",
    "jackson-core",
    "jackson-databind",
    "jackson-dataformat-toml"
]

terminal-all = [
    "jline-native",
    "jline-terminal",
    "jline-reader",
    "jline-terminal-jni"
]
